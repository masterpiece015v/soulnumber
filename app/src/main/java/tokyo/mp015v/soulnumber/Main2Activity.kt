package tokyo.mp015v.soulnumber

import android.app.DatePickerDialog
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.support.v7.widget.Toolbar
import android.widget.Button
import android.widget.TextView
import kotlinx.android.synthetic.main.activity_main2.*

data class Content(val eva : String , val cont : String)

fun getComp(s1 : Int , s2 :Int , c : String ):Content?{
    val friendMap =
            mapOf(
                    1 to mapOf(
                            1 to Content("良い","衝突することもあるが、年が離れているとその回数も減るでしょう。"),
                            6 to Content("良い","自分の力で突き進む1の人は、マイペースな6には魅力的です。お互いにないものを持っているので、良い友人関係を築くことができるでしょう。"),
                            7 to Content("悪い","興味を持ったことには浅く広くどんどん突き進んでいく1は、探求してから行動したい7とスタート地点から歩調が合いません。")),
                    2 to mapOf(
                            2 to Content("良い","異性としてはうまくいかない二人ですが、友人としては喧嘩をしながらも長く続く相性です。"),
                            5 to Content("良い","お互いの世界観があり、無理に話さなくても自然体で付き合えます。")),
                    3 to mapOf(
                            1 to Content("良い","3は、自分の飽きっぽさを、1は見栄っ張りになりがちな自分を、相手を見ることで見直すことができます。"),
                            4 to Content("良い","お互い明るく楽しいことが大好きなので、一緒にいて飽きることがなく相思相愛の仲になります。"),
                            7 to Content("悪い","７は優しく尽くすタイプで干渉を嫌う３にとってやりすぎてしまうところがある。"),
                            8 to Content("良い","誰に対しても真っすぐな8と物腰のやわらかい3は、一緒にいて心を開ける楽な存在です。"),
                            9 to Content("悪い","自由奔放な9は掴みどころがなく自分が必要とされているのか分からなくなるでしょう。")),
                    4 to mapOf(
                            6 to Content("悪い","6の必要以上の愛情深さを、ただのお節介に感じ、自分に取り入ってくる人間と警戒してしまいます。"),
                            9 to Content("良い","恋人であれば心配してしまいますが、友人であれば9の自由奔放さも、長所として受け止められ、仕事や恋愛などさまざまなことを語り合えるでしょう。"),
                            11 to Content("良い","真面目で嘘を嫌う４は、自分の感情をストレートに表現する１１の人と意見をぶつけ合い打ち解けていくことができる。")),
                    5 to mapOf(
                            2 to Content("良い","直感で動く5の人は、一見クールですが情に厚くしっかり者の２の人と、友達としてすぐに意気投合できます。"),
                            4 to Content("良い","真面目な５は明るく嘘を嫌う４と一緒にいると、とても心地よく自然体でいることができる。"),
                            5 to Content("悪い","5同士は衝突しやすい相性です。似たもの同士だからこそ、互いの嫌な部分が自分の欠点と重なって見え不愉快になってしまいます。"),
                            9 to Content("悪い","好き嫌いがはっきりしているため、ユーモアあふれる９と相性があまり良く無い。９の冗談がイライラしてしまう。")),
                    6 to mapOf(
                            1 to Content("悪い","6と1の相性は、まずまず。相手の気持ちに立って行動する6には、少々ワンマンなところがある1の行動が身勝手に感じられます。"),
                            3 to Content("良い","友人関係では素直で純粋な3と相性抜群です。タイプは違いますが、感受性が強く、誰にでも気さくに接するところは似ています。"),
                            6 to Content("良い","6同士も相性抜群です。一見陽気な6ですが、孤独を感じやすいところがあります。それを認め合い癒しあえる最高の相性です。")),
                    7 to mapOf(
                            4 to Content("良い","個人主義の４とはとてもいい関係を築くことができる。"),
                            5 to Content("悪い","7は、感覚で突発的に行動する5を理解できず、5は、理路整然と話をする7が堅苦しくつまらない相手と感じます。"),
                            8 to Content("良い","7の人と8の人は、友人関係であれば好相性です。"),
                            22 to Content("悪い","２２は発想力豊かでチームワークを大切にするタイプなので、個人主義の７を苦手に思う人が多いようです。")),
                    8 to mapOf(
                            3 to Content("良い","自由を好む３は、相手に反感を与えないようにふるまうことができるので、人を思い通り動かしたがる８を上手くコントロールできます。"),
                            5 to Content("悪い","どちらも好き嫌いがはっきりしているので、第一印象が悪いとお互いに近づきません。気心が知れるとわがままになってしまうので、互いを理解しあう努力が必要。"),
                            8 to Content("良い","友達としても、仕事のパートナー、恋愛のパートナーとしても抜群です。どちらも穏やかで平和主義者。出会ってすぐに意気投合し、良い関係を築くことができます。"),
                            9 to Content("悪い","表面上の付き合いはできるが、関係が発展した際自然消滅しやすい関係。")),
                    9 to mapOf(
                            1 to Content("悪い","明るく天真爛漫な1は、カリスマ性がありますが自己中心になりやすく、9は気性の激しい1に委縮してしまいます。"),
                            4 to Content("良い","友達としての相性も抜群です。友人関係であれば、9の持つ自由さも、4の持つ厳しさも、互いに自分にない魅力として捉えることができます。"),
                            9 to Content("良い","同じソウルナンバー同士なので、同じ考えを持ち、ストレスなくいい関係を築くことができる。")),
                    11 to mapOf(
                            1 to Content("悪い","１の人は、自由な性格の人が多いため、マイペースに物事を進める。１１の神経質なところとかみ合わない"),
                            2 to Content("良い","2とは、話し合わなくても「阿吽の呼吸」で相手がやろうとすることを敏感にキャッチし、サポートしあうことができる素晴らしい相性です。"),
                            5 to Content("良い","友人として仲良くできる。"),
                            6 to Content("良い","弱い部分も見せあえる6とも、友人としても恋人としても好相性です。"),
                            7 to Content("良い","向上心の高さが似ている。仕事仲間としても成功。"),
                            22 to Content("悪い","お互い洞察力や直感が優れており、とにかく反発し激しくぶつかり合う。")),
                    22 to mapOf(
                            4 to Content("良い","常識的な世界で努力を積み重ねる4と、独創的なアイディアを生みだす22は、タイプは違いますが、根本的な考え方が似ているので、理解しあえます。"),
                            8 to Content("良い","実務能力に優れている８と相性がいい。目的に向かって理想を実現する２２を上手くコントロールできる。"),
                            22 to Content("良い","お互いの高い能力を使ってレベルの高い仕事などができるだけでなく、何を考えているか分かり合える。一緒にいて楽だと感じる。")),
                    33 to mapOf(
                            1 to Content("良い","スケールが大く非現実的な33は、現実的な視野思考、行動力を持つ1に魅力を感じ、33の斬新な発想に感銘を受けます。ワンマンな1の態度も33は気になりません。"),
                            7 to Content("良い","刺激を与えあうことができる"),
                            11 to Content("良い","尊敬しあえる相手となる。"),
                            33 to Content("良い","気を使うことなく過ごすことができる。")),
                    44 to mapOf(
                            1 to Content("良い","お互いの長所を伸ばしあって、仕事において成功する可能性が高い。"),
                            3 to Content("良い","お互いの持っていないものを持っているので、刺激的な生活が送ることができる。"),
                            5 to Content("悪い","５の行動を自分勝手で自由気ままなように感じるので、我慢や努力が必要。"),
                            8 to Content("良い","近い感覚を持っているため、一緒にいて楽しく感じる。"))
                    )
    val loveMap=
            mapOf(
                    1 to mapOf(
                        2 to Content("良い","尽くされたい１と尽くしたい２は最高の相性です。特に男性が1、女性が2である場合は、これ以上ないベストカップルです。"),
                        6 to Content("良い","１の行動力を６の人がうまくサポートし中和することができます。"),
                        7 to Content("悪い","主導権を握りたい1に対し、相手に染まる気がない7は噛み合うことがありません。追えば追うほど距離を置きます。")),
                    2 to mapOf(
                            1 to Content("良い","尽くされたい1と尽くしたい2は最高の相性です。特に男性が1、女性が2である場合は、これ以上ないベストカップルです。"),
                            2 to Content("悪い","受け身で、なかなか恋愛に発展しません。ひとたび一緒になると、尽くしたい者どうしうまくいきますが、お互いをがんじがらめに束縛する危険性も秘めています。"),
                            6 to Content( "悪い","どちらも相手任せにしているポジションに安心感を感じるので意思表示もはっきりしない相手に、常に不安を抱くことになるでしょう。"),
                            22 to Content("良い","ロマンチストで愛されたいと望む２と独占欲の強い２２の相性はこの上なく良い"),
                            33 to Content( "悪い","３３は精神的なつながりを重要視するが、２は物理的なつながりを重視する。")),
                    3 to mapOf(
                            3 to Content("良い","どちらも恋愛に積極的で、お互いに干渉しすぎないように気をつければ、友達や兄弟のような仲の良い関係でいられるでしょう。"),
                            5 to Content("悪い","飽きっぽく自分のペースを邪魔されたくないという欠点がかぶり、相手に自分の欠点が投影されて見えます。"),
                            7 to Content("良い","積極的で尽くし型の3と、慎重な7も惹かれあう相性です。")),
                    4 to mapOf(
                            1 to Content("良い","1も押して押してのタイプですが、根本的に恋愛に対して誠実なので、4の警戒心を解くことができれば進展は早いでしょう。"),
                            8 to Content("悪い","4に対して8とは恋愛観や結婚観が異なるので、きわめて恋愛に発展しにくい関係といえます。"),
                            9 to Content("良い","恋愛に対して真面目な二人は、恋愛に対する価値観、テンポやリズムがとてもよく似ているのでそのまま結婚することも多い組み合わせです。"),
                            11 to Content("良い","真面目で嘘を嫌う４は、自分の感情をストレートに表現する１１の人とお互い意見をぶつけ合い打ち解けていくことができる。恋人や結婚相手としても関係は良好です。")),
                    5 to mapOf(
                            2 to Content("良い","受け身で尽くし型の2と、積極的で自分の自由も欲しい5とは非常によい相性です。自分の意見を優先し、合わせてくれる2の姿勢に「愛されている」という実感がわきます。"),
                            3 to Content("良い","猪突猛進な５を優しく包み込んでくれる３との相性はとても良好。")),
                    6 to mapOf(
                            1 to Content("良い","1と6は、恋愛における相性は抜群です。受け身で相手から強引に迫られたい6にとって、積極的にアプローチしてくれる1は理想のパートナーです。"),
                            6 to Content("悪い","6同士は、恋愛の相性は良くありません。恋人になると、互いに依存し束縛しあい嫉妬しあうことになるでしょう。"),
                            8 to Content("悪い","白黒つけたがる８に対し、６優柔不断な性質を合わせ持っている。"),
                            9 to Content("良い","9ともゆっくり恋愛に発展しますが、6が我慢できれば、どちらも誠実に相手に向き合いどんな困難も乗り越えられます。")),
                    7 to mapOf(
                            2 to Content("悪い","2は尽くす一方、嫉妬や束縛があります。7は自分の世界を大切にするので、嫉妬や束縛は求めていません。恋愛ではすれ違ってしまう相性です。"),
                            3 to Content("良い","素を見せるのに時間のかかる7ですが3の素直さや押しの強さに警戒心を解きやすいでしょう。"),
                            4 to Content("良い","7は4と結婚する可能性が高い相性です。相手に想いを伝えるのには時間を要しますが2人はペースが似ているので慎重さがマイナスになりません")),
                    8 to mapOf(
                            3 to Content("良い","3も、友人関係や仕事を優先しがちな8が、2人の時間は、愛情をかけ細かなところまで気が利く優しさを持っていることを理解しています。"),
                            6 to Content("良い","好きな人に従順に尽くす６は、恋愛だけにはまれない野心家の8の行動を許容してくれ、8は、自分の自由を邪魔せず、尽くして寄り添ってくれる6に安心感を感じます。"),
                            8 to Content("良い","友達としても、仕事のパートナー、恋愛のパートナーとしても抜群です。どちらも穏やかで平和主義者。出会ってすぐに意気投合し、良い関係を築くことができます。"),
                            11 to Content("良い","お互いを高めあれる関係。始めは反感を持ちますが、腹を割って話すことによって、強い絆を作ることができます。")),
                    9 to mapOf(
                            2 to Content("良い","２は安定を好むため、感受性が強い９にとってとても心地よく感じる。"),
                            4 to Content("良い","奥手なタイプですが、同じタイプの4とは出会った瞬間好印象を抱きます。どちらも刺激を恋愛に求めるタイプではないので、じっくり絆を深め結婚まで考える関係になる。"),
                            5 to Content("悪い","行動派の５と慎重に考え行動する９では正反対の性格をしている。"),
                            7 to Content("悪い","嘘やごまかし、計算のない不器用な7の素朴さに安心感を感じるでしょう。7が主導権を握っているようにみせて、9が上手に7を転がす関係性です。")),
                    11 to mapOf(
                            2 to Content("良い","実は寂しがり屋である11と、好きな相手に献身的に尽くし寄り添ってくれる2は相性が良いです。"),
                            3 to Content("良い","足りない部分を補える"),
                            6 to Content("良い","弱い部分も見せあえる6とも、友人としても恋人としても好相性です。"),
                            7 to Content("良い","感受性が強く繊細な7も、恋愛に対する価値観が近く良い相性と言えるでしょう。お互いが寂しがり屋で誠実な付き合いを望んでいるので、信頼関係をしっかり気付いていければ安定したお付き合いができるでしょう。"),
                            9 to Content("良い","癒しを与えあえる関係。")),
                    22 to mapOf(
                            2 to Content("良い","献身的に尽くしてくれる2とは、すこし物足りなさを感じることもありますが、喧嘩をすることなく、ゆったりと落ち着いた関係が築けるでしょう。"),
                            3 to Content("良い","恋愛に関しては安定と堅実を求める傾向にある22は、同じく真面目な恋愛感を持っている4と相性がよいでしょう。"),
                            5 to Content("悪い","近付くだけで衝突しあい、大きな対立を生んでしまう可能性が非常に高いです。22の人も5の人も、どちらも頭の回転が速く、器用に物事を進めることができるため、お互いにライバル視してしまうのが、衝突の原因となる。")),
                    33 to mapOf(
                            1 to Content("良い","33は意志が強い1を頼もしく思い信頼し、1は現実的な33に魅力を感じます。"),
                            2 to Content("悪い","２の人が思い通りに物事を進めようとするため耐えられなくなる。"),
                            3 to Content("良い","３３の欠点を受け止めてくれる心を持っている。"),
                            4 to Content("悪い","現実とは少しかけ離れた３３を理解することができない。"),
                            5 to Content("良い","３３を素直にしてくれる。"),
                            6 to Content("良い","情が深く、気遣い上手な6と33はお互いを思いやることができ、おだやかな恋愛関係を続けられるでしょう。また寂しがりやな6にとって、愛情深い33は心の支えになるでしょう。"),
                            8 to Content("悪い","８が支配欲で人を愛そうとするため、３３の自由な行動を制限してしまう。"),
                            9 to Content("良い","癒しを与えてくれる")),
                    44 to mapOf(
                            2 to Content("悪い","２が心の依存を求めてしまうため答えることができない。"),
                            4 to Content("良い","息がぴったりで何をしていても理解ができる。最高の相性。"),
                            7 to Content("良い","お互いに支えあうことができる。"))
            )
    var content:Content? = null

    when(c){
        "恋愛" ->{
            val map1 = loveMap.get(s1)
            content = map1?.get(s2)
        }
        "友人" ->{
            val map1 = friendMap.get(s1)
            content = map1?.get(s2)
        }
    }

    return content
}

class Main2Activity : AppCompatActivity() {
    companion object {
        //ソウルナンバー
        var soulnum = 0
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main2)

        //Viewを変数にする
        val toolbar = findViewById(R.id.toolbar) as Toolbar
        val btn_birthday2 = findViewById(R.id.btn_birthday2) as Button
        val txt_birthday2 = findViewById(R.id.txt_birthday2) as TextView
        val txt_soulnum2 = findViewById(R.id.txt_soulnum2) as TextView
        val txt_soulnum3 = findViewById(R.id.txt_soulnum3) as TextView

        //戻るボタンの設定
        setSupportActionBar( toolbar )

        supportActionBar?.let{
            it.setDisplayHomeAsUpEnabled(true)
            it.setHomeButtonEnabled(true)
        }?:IllegalAccessException("Toolber cannot be null")

        //自分のソウルナンバーを表示する

        txt_soulnum2.text = "あなたのソウルナンバー:${MainActivity.soulnumber}"

        //イベント
        btn_birthday2.setOnClickListener {
            soulnum = 0
            val dialog = DatePickerDialog(this,{view, year, month, dayOfMonth ->
                txt_birthday2.text = "相手の誕生日:${year}年${month+1}月${dayOfMonth}日"
                soulnum = getSoulNumber(year,month+1,dayOfMonth)
                txt_soulnum3.text = "相手のソウルナンバー:${soulnum}"
                val content = getComp(MainActivity.soulnumber,soulnum,"恋愛")

                txt_comp2.text = if( content != null) "相性は${content.eva}\n${content.cont}" else "普通です"

            },2000,0,1)
            dialog.show()
        }
    }
}
